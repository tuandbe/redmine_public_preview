<% if @issue %>
  <div class="public-preview-container">
    <h2><%= h @issue.subject %> (#<%= @issue.id %>)</h2>
    <div class="issue-details">
      <div class="description">
        <div class="wiki" id="public-preview-description">
          <%# We will render the description directly without server-side Nokogiri processing for tokens %>
          <% if @issue.description? %>
            <%= textilizable(@issue, :description, only_path: false) %>
          <% end %>
        </div>
      </div>
    </div>
  </div>

  <% if @preview_token && @preview_token.value.present? %>
    <script>
      document.addEventListener('DOMContentLoaded', function() {
        const previewToken = "<%= j @preview_token.value %>";
        const descriptionArea = document.getElementById('public-preview-description');
        const currentOrigin = window.location.origin; // e.g., http://localhost:3000

        if (descriptionArea && previewToken) {
          function addTokenToUrl(url) {
            if (!url) return url;
            // Check if it's a relative URL or an absolute URL for this Redmine instance
            if (url.startsWith('/') || url.startsWith(currentOrigin)) {
              const connector = url.includes('?') ? '&' : '?';
              return url + connector + 'public_preview_token=' + encodeURIComponent(previewToken);
            }
            return url;
          }

          // Update image sources from attachments
          const images = descriptionArea.querySelectorAll('img');
          images.forEach(function(img) {
            if (img.src && (img.src.includes('/attachments/download/') || img.src.includes('/attachments/thumbnail/'))) {
              img.src = addTokenToUrl(img.src);
            }
          });

          // Update general attachment links
          const links = descriptionArea.querySelectorAll('a.attachment');
          links.forEach(function(link) {
            if (link.href) {
              link.href = addTokenToUrl(link.href);
            }
          });
        }
      });
    </script>
  <% end %>

<% else %>
  <p><%= l(:notice_issue_not_found) %></p>
<% end %>
